package com.company;



import java.time.LocalDateTime;
import java.util.Scanner;
import java.util.*;
import java.util.Random;
public class Main {

    static LocalDateTime[] myObj ;
    public static void main(String[] args) {
        // create scanner to read user input
        Scanner input = new Scanner(System.in);
        int []counter=new int[10];
        String[]player=new String[10];
        myObj = new LocalDateTime [10];
        int count=0;
        for(int i=0;i<10;i++){
            System.out.println("Enter player "+(i+1)+" name");
            player[i]=input.next();
            myObj[i]=LocalDateTime.now();
            // create char[] array to store board values
            // set positions of board from 1 to 16
            char board[] = {'O', 'X', 'O', 'X', 'O', 'X', ' ', ' ', ' ',' ', ' ', ' ',' ', ' ', ' ',' '};

            // 2 players: 'X' and 'O', start with 'X'


            // display the playing board in 1x16 layout
            display(board);

            // play game until gameOver is true
            boolean gameOver = false;
            while (!gameOver)
            //&& count< 50)
            {
                count++;
                // get current player choice, and update board value
                receiveUserChoice( input, board);
                display(board);
                // check for winner, draw or game is not over yet
                gameOver = isGameOver(board);

            }
            if(gameOver==true){
                // display the updated board
                display(board);
                System.out.println(player[i]+" win the match in "+count +" times");
                counter[i]=count;

            }

            count=0;
        }
        System.out.println("\n----------------------------------------------------------------------\n");
        System.out.println("\n\t Player Name\t\tSteps Taken\t\tDate and Time");
        for(int i=0;i<10;i++){
            System.out.println(" "+(i+1)+".\t  "+player[i]+"\t\t\t"+counter[i]+"\t\t\t"+myObj[i]);
        }
        System.out.println("\n----------------------------------------------------------------------\n");
    }

    // display board in 3x3 layout
    // note that array indices from 0 to 8 = positions from 1 to 9
    public static void display(char[] board){


        System.out.print(board[0] + " | " + board[1] + " | " + board[2]+ " | ");
        System.out.print(board[3] + " | " + board[4] + " | " + board[5]+ " | ");
        System.out.print(board[6] + " | " + board[7] + " | " + board[8]+ " | ");
        System.out.print(board[9] + " | " + board[10] + " | " + board[11]+ " | ");
        System.out.print(board[12] + " | " + board[13] + " | " + board[14]+ " | "+board[15]+ " | ");
        System.out.println("");
    }

    // get current player choice, and update board value
    public static void receiveUserChoice (Scanner input, char[] board)
    {
        int position1,position2;
        char temp1,temp2;

        Random rand = new Random();
        // loop that continues until the user enters a valid position

        while(true)
        {
            // get user input, a position from 0 to 14
            //System.out.print(" enter a position1: ");
            position1 =  rand.nextInt(15);
            //System.out.print(" enter a position2: ");
            position2=rand.nextInt(15);
            // make sure it is a valid position, and the position is not taken yet
            if(position1 >= 0 && position1 <= 14 && position2 >= 0 && position2 <= 14 &&board[position1]!=' '&& board[position1+1] !=' '&& board[position2]==' '&& board[position2+1] ==' '&& position1!=position2)
            {
                // if it is valid input, mark the board position with the current player
                temp1=board[position1];
                board[position2] =temp1;
                temp2=board[position1+1];
                board[position2+1] =temp2;
                board[position1]=' ';
                board[position1+1]=' ';
                break; // exit the loop
            }

        }
    }

    // check for game is not over yet
    public static boolean isGameOver(char[] board) {

        // if there is a winner, print winner message, return true
        // loop to check if there is a winner row-wise
        for(int i=0;i<9;i=i+1)
        {

            //check if Player is the winner
            if(board[i] =='O' && board[i+1] == 'O'&& board[i+2] =='O'&& board[i+3] =='X'&& board[i+4] =='X'&&board[i+5] == 'X')
            {

                return true;
            }

        }

        return false;
    }

}
